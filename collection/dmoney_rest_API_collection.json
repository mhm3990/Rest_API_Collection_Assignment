{
	"info": {
		"_postman_id": "e4de2df7-4b6d-4b22-ba70-b871d49dae16",
		"name": "dmoney_rest_API_testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27520834"
	},
	"item": [
		{
			"name": "Admin Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"token\",jsonData.token)\r",
							"\r",
							"pm.test(\"Login is Successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Login successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/login",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin Cannot Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login is Unsuccessful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Password incorrect\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1235\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/login",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Agent",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var prefix=\"0193\";\r",
							"var nidprefix=\"1100\";\r",
							"var randomnumber=_.random(1000000,9999999);\r",
							"var user_phonenumber=prefix+randomnumber;\r",
							"var user_nid=nidprefix+randomnumber;\r",
							"pm.collectionVariables.set(\"PhoneNumber\",user_phonenumber);\r",
							"pm.collectionVariables.set(\"Nid\",user_nid);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Agent is Successfully Created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{PhoneNumber}}\",\r\n    \"nid\":\"{{Nid}}\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Create Agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Could Create Agent\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User already exists\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Latoya Dibbert PhD\",\r\n    \"email\":\"Felipa5@gmail.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01938448877\",\r\n    \"nid\":\"11008448877\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var prefix=\"0163\";\r",
							"var nidprefix=\"1952\";\r",
							"var randomnumber=_.random(1000000,9999999);\r",
							"var user_phonenumber_1=prefix+randomnumber;\r",
							"var user_nid_1=nidprefix+randomnumber;\r",
							"pm.collectionVariables.set(\"PhoneNumber_1\",user_phonenumber_1);\r",
							"pm.collectionVariables.set(\"Nid_1\",user_nid_1);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer1 is Successfully Created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{PhoneNumber_1}}\",\r\n    \"nid\":\"{{Nid_1}}\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Create Customer1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Could not create Customer1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User already exists\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Kathy Schiller\",\r\n    \"email\":\"Felipa5@gmail.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01638349080\",\r\n    \"nid\":\"19528349080\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var prefix=\"0175\";\r",
							"var nidprefix=\"1971\";\r",
							"var randomnumber=_.random(1000000,9999999);\r",
							"var user_phonenumber_2=prefix+randomnumber;\r",
							"var user_nid_2=nidprefix+randomnumber;\r",
							"pm.collectionVariables.set(\"PhoneNumber_2\",user_phonenumber_2);\r",
							"pm.collectionVariables.set(\"Nid_2\",user_nid_2);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer2 is Successfully Created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{PhoneNumber_2}}\",\r\n    \"nid\":\"{{Nid_2}}\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Create Customer2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Could Not Create Customer2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User already exists\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Ricky Gutkowski\",\r\n    \"email\":\"Rowena20@gmail.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01758297791\",\r\n    \"nid\":\"19718297791\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit to Agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deposit to Agent is successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Deposit successful\");\r",
							"});\r",
							"\r",
							"pm.test(\"transaction ID is showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.trnxId).not.equal(null);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{PhoneNumber}}\",\r\n    \"amount\":8000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/deposit",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Deposit to Agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unable to Deposit to Agent\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Maximum limit exceeded. You cant deposit more than 10000 tk\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{PhoneNumber}}\",\r\n    \"amount\":10000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/deposit",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit to Customer1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deposit to Customer1 is successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Deposit successful\");\r",
							"});\r",
							"\r",
							"pm.test(\"transaction ID is showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.trnxId).not.equal(null);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{PhoneNumber}}\",\r\n    \"to_account\":\"{{PhoneNumber_1}}\",\r\n    \"amount\":2000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/deposit",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Deposit to Customer1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unable to Deposit to Customer1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Insufficient balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{PhoneNumber}}\",\r\n    \"to_account\":\"{{PhoneNumber_1}}\",\r\n    \"amount\":9000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/deposit",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Agent Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Agent balance is showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User balance\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{PhoneNumber}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{PhoneNumber}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Check Agent Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unable to check Agent Balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var Message=jsonData.error.message;\r",
							"    pm.expect(Message).to.eql(\"Secret auth key validation failure!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{PhoneNumber}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{PhoneNumber}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw Money by Customer1FromAgent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Withdraw Money by Customer1 From Agent is Successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Withdraw successful\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{PhoneNumber_1}}\",\r\n    \"to_account\":\"{{PhoneNumber}}\",\r\n    \"amount\":500\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/withdraw",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Withdraw Money by Customer1FromAgent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unable to Withdraw Money\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Insufficient balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{PhoneNumber_1}}\",\r\n    \"to_account\":\"{{PhoneNumber}}\",\r\n    \"amount\":8000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/withdraw",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Customer1 Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer1 Balance is Showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{PhoneNumber_1}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{PhoneNumber_1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Check Customer1 Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unable to check Customer1 Balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var Message=jsonData.error.message;\r",
							"    pm.expect(Message).to.eql(\"Secret auth key validation failure!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{PhoneNumber_1}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{PhoneNumber_1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send money to Customer2fromCustomer1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Send money to Customer2 from Customer1 is Successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.fee).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{PhoneNumber_1}}\",\r\n    \"to_account\":\"{{PhoneNumber_2}}\",\r\n    \"amount\":50\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/sendmoney",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Send money to Customer2fromCustomer1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Send Money is unsuccessful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Insufficient balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{PhoneNumber_1}}\",\r\n    \"to_account\":\"{{PhoneNumber_2}}\",\r\n    \"amount\":9000\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/sendmoney",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Payment by Cutomer2toMerchant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Payment by Customer2 to Merchant is Successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Payment successful\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{PhoneNumber_2}}\",\r\n    \"to_account\":\"01686606905\",\r\n    \"amount\":10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/payment",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"payment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Payment by Cutomer2toMerchant Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Payment is Unsuccessful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Insufficient balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{PhoneNumber_2}}\",\r\n    \"to_account\":\"01686606905\",\r\n    \"amount\":1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/payment",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"payment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Customer2 Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer2 Balance is Showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{PhoneNumber_2}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{PhoneNumber_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Check Customer2 Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unable to check Customer2 Balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var Message=jsonData.error.message;\r",
							"    pm.expect(Message).to.eql(\"Secret auth key validation failure!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{PhoneNumber_2}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{PhoneNumber_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Customer2 Statement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer2 Statement is Showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Transaction list\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/statement/{{PhoneNumber_2}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"statement",
						"{{PhoneNumber_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Check Customer2 Statement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unable to check Customer2 Statement\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var Message=jsonData.error.message;\r",
							"    pm.expect(Message).to.eql(\"Secret auth key validation failure!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/statement/{{PhoneNumber_2}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"statement",
						"{{PhoneNumber_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Merchant Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Merchant Balance is Showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/01686606905",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"01686606905"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Check Merchant Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unable to check Merchant Balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var Message=jsonData.error.message;\r",
							"    pm.expect(Message).to.eql(\"No Token Found!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/01686606905",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"01686606905"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseurl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQHJvYWR0b2NhcmVlci5uZXQiLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE2ODU1NjgxNzYsImV4cCI6MTY4NTU2OTk3Nn0.2lt7dlZX8ayMLafNsYnfLZMgTIiIVrayhP40bNtw8-Q"
		},
		{
			"key": "PhoneNumber",
			"value": "01936830776"
		},
		{
			"key": "Nid",
			"value": "11006830776"
		},
		{
			"key": "PhoneNumber_1",
			"value": "01638027512"
		},
		{
			"key": "Nid_1",
			"value": "19528027512"
		},
		{
			"key": "PhoneNumber_2",
			"value": "01758789711"
		},
		{
			"key": "Nid_2",
			"value": "19718789711"
		},
		{
			"key": "Balance",
			"value": 7562.5
		}
	]
}